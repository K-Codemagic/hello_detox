# Check out https://docs.codemagic.io/getting-started/building-a-react-native-app/ for more information
# Please review and update values in curly braces

workflows:
  react-native:
    name: Android Detox
    environment:
      vars:
          # Android Keystore environment variables
          CM_KEYSTORE: Encrypted(Z0FBQUFBQmZuYXR3QkFPcEd4MlZybFpmYkQtYVYwWExvb0JHaE1femVXTHlVd0ZQVDRyTnhRa0tfMXBFQlYtcUkyLXNwLW5KdEs0aVZiN05EUmFRNTd4TlYzS2JDMERTam5KaUJBRFphTThRV2JFZ1pVcnp4WW02b2FMd1FQV0pPNzhwSk12ZEk5SWw0U25wa19CdXgxZk5KNGFQSWtjQU0xR2RzcWQ4a2JnWDBaSmJrdVV6amQtdnh0UnowTjJmR0RwZ3dYZVotRW8yQ2RqZEFvYmpDbGQ0djAwTmRVdVYzemxwUG44VVhuNnBHSVJmYTBNNEZUTVRHTW1yNm52NkxEREt6NEd3LUd4aVhSMjVvY01PWFZYT3l6X0pWUHBKek5NeV9yTjhUNW42cDFyOXM4Wjl2X2NkQlJoQXJ6NHZZbFRwSUZKcC1weXRid2VnSEl3RkJ0b2NYYUs5c2NvTDhKendTY2pNZ3dwSjM2RHhmYmRPSVZPMWZIT2d3WWg1NG5vWlp0Q29fUXRvZXV1Y2Y2VV8yS3lUQm9GN0RkNHVvS3UtZWZibHA0UEE5cUh3cHlEOENnUTMwLUpjdVY2S3kxWU96RFlwbEhiR00xWWVJcy12NDRyeXhIZDJEd1RIQUxRN09hTTEzbV9TcUV3VDVrVkpVY0k0RWt5TFdRWlRkZThGN0xJN0xhYWRZRDQ5aXJsSTVfWWFTYWwyLV9qWEgyM2xoTGtBZDl0QXU1QVNYd1BqOVlncmxIMlEteU9tdFFqRFkwclJjVHBUOWUxWGhPVGYtdWd5V3JvU2JwSnVWVllmc290VlJpVjRGRXFZYkRhemNvSUdDNFgxRU5zOWdOTW1uVFlJZlQzMV9zX003M0FLNWZQRnNzS1dKcHNHa1ZObzVkcldWMWdrWWZTS1NsTzFpdlZBSnVQVXBUM3doTVFxOWE1UXBJV093Nm02LXJZVHhQcnZXVm9LVERwTnR6WkFwLVdJc2IzZi1iQXNOTG42TjllQlIxczlmOUlsVzNPR3Npbjh0SEMzZ1FLODBWVVhGcVFucm1oZjZSd05RdGJsMDVsSE5XRUdaX1pyS0c3OWVPeXF1UjZzMlZVekY3NVJqTDQ0WWRYRnFGRDdqUUVHMUN0V2o3NzdnMzFKWEZZbmtac2ZYTTFRWld0M2k0eHdaQVNuQU56MkJJazZGOWtuZU5pNVhETm9ZRmRFRkFsSlJ0ODJCblhLRkUzeEU4TEZaRmpZOGNqaHM5SUhVVXZQOWQ2M1F1MUlBOHR0STR0UjRsWFlYV0xRcFh4djJCbjdjOVoxVklQbnM0WGlOSTFLQkRGYnNCWFVXNWx3Rk1yS3RETVktRDNPa0xlbGJwTHRWa3BqM0dqNXpzZFZ4R3lna2s2Nm9BVm80TVJlRkhidzR0YTFuMlZ1dzBZZ2xVWEQwNWNUTlFKTTVHT0JzX0RpMHVfUmlXRFMxbDFVQkV4TzdIdXZ3Ync5YUFQTEctMGU5TzFNLXZEWHJtOGc2TDBxZ19fY0VJd2FPNU9Cc1JPbU5IWTBQZDgtX3kzYUxHdzh1VG9pd3QxRFlkRHp6VXBhVkU0d2tFT28xUkQ1dVJEdmg0RVdrS3UzUVhYRFpmMGZDTlVpd0RoTXBlUVAyOWdReWlaYjlMRDlQVjdSTlB1TlVUX0VUMzJMYlpGd3ZtcTlneTJVak1jVlI2Vk0wWS1hbk9fVWQxby1JUFFINl9rMDQ1aGdOSy0xbmx3YmszR1FkN2xXcFpOaFZYVTJDZ2x2TXNXY3FObEdGNkl0Ny1SSmUydDkwUkZLODhVUFg3dzJPak02bktiNVg4MFJXR3BOZFRsZTdsNTBJVU54eEJCcDAyckZEZk9ZSkdoQWFlaVlLX3F5UVhUSllSLTR6enJfZWZvc3l4RmItdkRGeUduVnoxd0VpWnFhMEd3SUh3YmVpWEZ4Rl9Dbi1ucTczQU9pLURaU0Y4cC0zdEpTSWVpNlhPSXh0YTFwNzZ2T3IzWTI2dnozUk15eFk2d1JDOHNkUlBJN0xsT0NabFNwU2xXU0ZpNC1aZllGSlFOeW5SYnpHM1lnelhNVHBpOU56b2lrZXJKOFJLS0FXUXRLLUlpMlVubWwxeThmZmNMb3ZqU3VSY2ltUGpsUG05a0RKVUZMQVV0VVpodlVxSWExbjY5ZENYTzZFQjJuYzRvTFJfNHVQT2FXVzB3SzVwd2haYU9reXFveWJGdVdVRHQ5WUR6VllobElVRHpPb2RWSVY3c2FHSWR2Mk4wenB0NEZCYk5jcVloUjZOV3pfa0hTVUVfUExjTUNzMzBiNlB0eDd4clZWbEhWTTAwdEpNR243VTdLM3Q5aWVWaEhDVlhxeWxfcE1CVGJaaGZJbWQxNXFxazNOSERjeVMzYi1ndEQ4NWhCQzBkdmNQbU1fVHNZSHpSdzlldWt3NXctM2tyWGRBbDl1MkJEckc4SVBpeWpzRzVEeXJQbE11blN0Y29HX24xeU93VTlDbjhCVzhFUENJd3VvWklIOW05cGo1bVE0YVgyTjBwZmVsXzNPSEdZdTU4UWQ4aGhSR0R3UnhXMUFWVC16SzVRaHNFZ25XOGtHM0x6MWdQVzAydUplREhpb2M5YkZrX3pnVnpEemtwdEVrbmF0TUFNcXZ4QWlXY0pjc3hwbHNDckctNWRGU1lqZG0yZnQxQ0NOOVJOZjF5M1BLTmJ2aFhsbXdNRTRrTlg1elBsNG1RVTFZekU4WGMzRDJZNEZ2WV9xMnF1N3c5SG1QLUp2NS1FSkdQekJzamUxaF9peVRuSlBlVC1FaEM5QVZnSl93clFid1dNRFhNWFVrVXZMMzVTSjRqWV91T0VqSVQ1R0tDRmk2cHBZVWVkTmRfUzN0Zi1YRUMtMDBibzU5SG1ULXh2TGJUaDFUelRaVGE4SU9uUXRENm5xbTNaSjNEeU1qemU4akhSRFA5dVFKNTc5Unl0eDlqYkRjSDlQSHk0UUdTUUktQk9XdjZBS0R4VlZvNEJLVGh1bEQ0d1FNR2pEanh5T2hNV0hlS040QlZGaDV5NmxVaFdvblhjUzRyOVdVOERiY01lMDZYMFAwZEp4dVVfd21QbzRFanhCYU1ISThWdmx0S2tuWmg2U0ppOHd5WjFJRnZIaWlYV2l0SXBtNnkzMDlndi04Tmd2RkJxVy0yMFpmQlFwdUZmVHpqS3Y0SEZ0cUVmYTJGVnUxVl9QWENaZWRyaWNoV1J3Y0tiU09TYnZsb3BDWkRTR2J5M0JzdVRqVWZNLXdXbmRtSzhzNnA3cGViV1lhUnIyWXVrbHkwUUlFY2tsd29KUmZiN0FTbW1jbGZyZGFmcm1RTWU3ZW5lNUpxbEN5SDIxQzBtWjlWdk1kZ2FfMFNkSUNnY08wVDRmbkREb1VpUUtHcTJ5TkFHOFhPLXRPaThtZmFvVU5YX3gwRXVWVVF4ZWdEd1dZZ1hyaDJjSExiSndVdFhjd3pSUVRCeDFfRzBjNjRHbTJFLUFvTHNkaW1TZnRFS1Zxd0NzVHNhMFpuckV5MkhadzF6VGtodmlaWVEyMjdSMllMeXZUN3lOcE4tQ3dxVmhmM3NQM3M2SWszN2ZvTTZQVUV4Ql8wQ3JFX1BLUWtPTnBtU0ZQN0Zod0RSOTdXUWFSNWNvUC1YaktIZkpyN29DVklhRVROWWsyem1aVGJNdkJjbVhWZE5wMTd5VUJVZkhrS1FraUdaNVI5dWJ2ZWJHYjNQSV95VVFBNkJoOFZfdjUyaXFYbW1oZkJfZ0pPenNtQTNEUHdETzZJSFU5aHFZaVI0T2p0MnE0a0dHaE44MEJWZGllVDByTVFsUmJyUTJkbVdRV19xYlR0akR6WXRvRkVhSUFkZEtsbVd1Yk56Sjl6ZHZ1MlNTcmctdDBEcUxsQjN6Y3RYemNDLTkxQy1KQl9RWkxwb3BqcXBRR1dJWDdZRVpzaHUtRXJzemV6MGp6b1drOVFoU2duX1VGUFdVSU9rVDVxdDhJRnlCS1h1OTlEYkJKVktRdkxmUW9ycXpwSTNROGFObnhSTGtNZ2tuakJfMXlQWjZGMjM3cGNad0wtMExMQVZ0YkhzUnBGSHViaHVxMGVudGJFemVtY0JqWkJyNlp5YVQ3aWtIX1BNWExyYlBlN05odElmWDhKdkU5MGYwV3U0bndWSEVHR1BJRjNzTVo5cHhhMnVraXQtbDU1TzlEUXM3Y0JfRENyb3BWNW1iS2dEeUNmSlUxWWtqWnNlLU1ZVFlQVDFSUFozYUppQmZDQmhPa3lDUW55Y3VjUlBTYkl1Ri1WUS1xaUpUUVo4Y0JUVVE0N3puX1puYXdRb2VOUlZtLUJMN25NOGZrbENYaTlmdmt3cjFmcG4yNnJMSldTQjlJanhjcEtjMFRpbVFWMzUwMk93aUplVEV5MnczLXlRVE1yWm0yQTlZOU92LW5yanozYS1HdTNhZ2ZuY0U1aElrTENVb25oWlo0VU4wV2M4WFlROU92NlBqQTNqVmlUMVlXMDNMT2JUc181X1FwTTNXSlZFTzBFQ1pGQ0tFZnRWbG1FRHZ5cVlUNmpVMHY2eUhNVmw1dmlYN1FNOWpBRnhYdzloT3FBb2NpNmF5N19QUWVueUNVYVBOM00ybkJCVnVQWmRmWTQ1RDhnSnlUR3hGRlVOWEhjRGRhemNaMUFQTFJvbnhvSEFIRWtJQ2dRQy00ODhoUU9wUkVacmFVQkNaWHQ5MHBub1YxdGk1dGI2QU5zV05NekNyRmFCbzVqZ2hiclRvNE11NFBRbTdQcEtCU0cxYzlFZzhDOXFoQ05nSW1rVE5RelJwM1dUNmo1b1pibTRkZ0QzWlN4TVhoQ0ZqQWV0NTJscHVhOHFQb0ZiZVMzdWdPQWMzNUliRkpOTUFHUUtHLVhOU1N2VURaeVAtaGozQ3p3dU1yWnJxMFM1S3ZFVWFONXBGWmFYcU5XRzJsUzhYZ2trNFI2em1uVW0tVHlMcGxUM3BseUZJSDhCTWkxLVVHNHNkVlRFNkt3UlB4cUxIY2N1YThNTG9XMDd3end3SldlVGp5NE5FdGpCbm5tZFFzYjRGNkp0cVdIaGtrN2Y5c0l2WVVzZ3pVMkFsQkdaN1UtaUtSSks4UGNGOVZjdVIzZ21QQjFERDBJNFlBNE5vQ3JJMnpyc3prNTIxbkZuWHo0aVBhakMxWVVOMFlWU05KZWNXYXdzT1R0YWw2UGNwRy10bWs5TU1CMlNXRjdDSWZCdEUxNnlwRTV0aDRrd2ZiT3Zhekk5aW0wbEs2STQzSzR3UlRJTkZQaVpaWkluREYyZVFRWldFS2JobXZ4ZzYwSXVCUDZUSGxPNGRqc0pGa1phVWtya2thbm5JYUlTMU9wZGtDeFVpOVJqcE5GZnlpTjB6bEVEc21LUzBpZkdLWjJxeWxmel9ISHJ6YnFBdF9SenlwcUZ1RWJEU3ZWR2o3Z00ybTdPTnRZNy1wazlXRzBYMVN5ZDhVN1VIUXFrQXRWTGh5LWxNOVBTcmFwOGptTG5IZXp5TUpQa2dSM3pJSUxYRmVpcDdzZDc1VGk0QWljdUJ1N1ZqRHdrNXlYUlBYTmxHbDd2dXNKZE4zYThRYW5XeThReGRESllJRmZieHVVTXFBb2t3eHh0b0xZZXlmVUpjcXVTSVRSRVRTZEF4Z25PSFF2Q0ZiX0F2bHhoeHRxRDhsOU41YTJsSDFaMTlKOVpiQTlpdjF6bk5nRG9RLWNkbklVVUpPLTEtS3hfRURVdW5MTVloaGt0S3lFcG50bC04NEZYcWtsaDVVQWo3bFJ2YUJkUjFranR3WmFPNTQwVWlOd2s2d0V0NFcyMmcwdWlYSlgyeVlfQnVLZzR4QUJrUTFNbjJYVFF0dWhZYmVBZ0JMdTFCTGh0VXlkdVczekh6Q2YxV25XRGFBb1ZPbGdiT3VLcUVrTWN6WnhVdWRiVFIyZF9fTU95VUR4UjRVX0JHRk4wX01TWkp4TG9aVEVabktFNFlpenlyaHFrYnpkNVI2NGlKTmZlbjd0c1ZqTWMzNUdtcVljZk1HZVFZRThhbjdncGdxMV96bXZPZ0JxV2ZkVFBrX3BiY01xUUhOS2M0QXR5a0wyWDh3cUFOVHVCYTdBVGV5bWZORXFPZ194aHBCWlNMYXI2dXBiTWYzYk9Kb2syRFZlUkJ3eEZXOG9idkUyUUhsMkZYNFppRGljLTdacDFyTTFXQTgwaXpwbjRiZkVhX1I2Ng==)
          CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmZuYXg0VHlQTTJIX3RiYjNadHBOQy10c01CdEV3QUVsRTk0REtMdGR2RlBZalo2aDJlMWYxX0Y1SnpUTkRBbkVxUmJVQ0dkYmkwSlRtWGY5QkxJSWNsNjBHTUE9PQ==)
          CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmZuYXg0VHlQTTJIX3RiYjNadHBOQy10c01CdEV3QUVsRTk0REtMdGR2RlBZalo2aDJlMWYxX0Y1SnpUTkRBbkVxUmJVQ0dkYmkwSlRtWGY5QkxJSWNsNjBHTUE9PQ==)
          CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmZuYXlaYnFkUHpoY29KMnY1NVVId09JMk9YSnA5Y3ZsQjc3UlZxUU1IWHVRN1p3Vjd1LUF0TG54dFJOd2ZtNGRRbnNSdS1MOWxJamF2M3FoOEJSaWliTTM5Q1E9PQ==)
      node: latest
    scripts:
      - name: Install npm dependencies
        script: |
          npm Install
      - name: Install detox dependencies
        script: |
          brew tap wix/brew
      - name: Install detox-cli
        script: |
          npm install -g detox-cli
          cd $FCI_BUILD_DIR && npm install detox --save-dev
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
      - name: Set up keystore
        script: |
          echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
          cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
          storePassword=$CM_KEYSTORE_PASSWORD
          keyPassword=$CM_KEY_ALIAS_PASSWORD
          keyAlias=$CM_KEY_ALIAS_USERNAME
          storeFile=/tmp/keystore.keystore
          EOF
      - name: Build with Detox
        script: |
          detox build -c android.emu.release
      - name: Test with Detox
        script: |
          detox test -c android.emu.release
      - name: Build Android release
        script: |
          cd android
          ./gradlew assembleRelease
    artifacts:
      - android/app/build/outputs/**/*.apk
  ios-workflow:
    name: iOS Workflow
    environment:
        vars:
            XCODE_WORKSPACE: "hello_detox.xcworkspace"
            XCODE_SCHEME: "hello_detox"
            CM_CERTIFICATE: Encrypted(Z0FBQUFBQmZuaTBSNFJ2SG56Ym13UVpmQW5SOEx2UlNUTURiQ19qV0hWclN3X0FONE5odG95MW1iYlBZeE1jTkpiLXpQRVo3ZC1iMzhrbUhId2pOeTJhS0t6Rm5rRmN5Ym91WnJaV3g2R014eW4zOFdKU1ZlaWh0MWl4QS1hTGZBY1ZYTEM1ZG1Ra01JZkk3TUtyTUJ3VTZfNndmVUV3NnRkdjlSbjNVUm9LcWNaeENOcjJQaHViSzlYSDgwSkVqTkp4ci1zdFV6TThpY3otTTB2bUZhUmpjV0plRU9id0dQT24tdlVUcXE0amltX2w2OUQ5a1FySXV2V2UteFpqdmZSM2RSWVFOLUJGR052SHpXZTBLbFdBUlBZMElXZzI2djZ1UjJSSGRMcnRuaHcySlF5ZjlOQUItS1M4V2ZtVXJkN3BQUkJaZGVzOXlocXpxLTNXa2hJckhnT2R1NVpSdjBzamNtYkJud0ROY3pyS05wbUNraUhxd2RHa245MUlqY3N0b3BwR0lmYzAyWDV1NXk3REoxeE1sZ1Ffb290TWNiNmk3eUwwT1RFZVltWWZSRjhhVUVueUZiVHFjcGpmTmJ5aXlHTFJqNml4eV9WWGhxQzZsOTZtN2doNk8wVnc1eU1pa05KazhFUEYtOUR4YzZZaTRCbFJDQ3BOV29NRkxPaDZqV3FEaG53SjJxWmdSMzdGcnhxeDNNY0RzeWxxQVVQTl9oUTJmU3MyM3MyOWJiRzlMTFVTYTlkMVVpRC1Pek9rUVZpbjhDUEROSTFhNXBtTURPZWNYR2J5dWFHQUhmV0ZLQ0JQcnBUd1R1b1N2ZldiaDdiNnBiUGNKWE9pOUU4R2YxY19rSk5nMEZQTWN2cHpSOVU4dTlVZDJvcUVteVJ4aUx0cVhqRjUzNjdFSTVBd1d3SU5ULW9QakxYZ3NRTG5GbUMzdHlCOFl5SGgtNGVfQlg5ak5sMkw0WUw2cWcwdXBsYkhvMlI2UjUtdTdWMmZ5bEhqMmJOS0llenNjNWFFbG11dlJsaFctdDFUOURnRUg1LW5KLV9oVnQxa3R5d01ZUkVrVVVsWm5RRWdJd1NYQlNUeXhUSU1CX2NaaTZDRG9vZk9wUTFEeFExQ01ETUNZMlNpVzJrVUpJenFDcGVtYXRjbE4zSzlkSHljYV9GNHZLcy0tWHZpM3BZZ3F0Nm04cVhqSEl5dWU1MzZUeWRrck5YZHI4VGJNMTVpVXVjVWFPS29jeUtmV2lQWTJLMXg1c2kzU3Ffak0wMmFuRTg4cVBKR2YtS0xxMVFRYjdkMVZHdHdYOGI2RXlENkRtaWkxbDIxa1pqX19EMVVDZy10ZFQzX3BOM3JsZnpiLWozdl8zcmpqREpCemtoLWRuVnE0amktM1JLYWh2YzlZQnJkenJ6ekVvUXRkcWR6ai16TEw4cUxJTVgyMVYzcDdoRTB1N0hOV2xFU01LSFE5TTlnOGEzMnVoVmM5VHBleWpHUU81TjBZRGVJbTZUSUk2RU1JaDN3REtyOUJLN2RGRlU1ODdrNjRaVUwwQjlBNzFiRTRWTklVaWdWY2JEQlRwaTllc3BFdEItdkZJWk1lQ2xDeHU3Y2dSbGNndDM2ZU1ERVVnMVdpa2hUTURXTTVhLWdZTVp0T0NmUF8zTlNTdVVUOXpGbkR3eGNCWi1FOVl5UF94aDlnODljRk5IMk5CaUFIczkzVHQyX1dFNklSR0toc2hMN2VVcHotcXdaeHYtV01xaE84bzlkcXE1eEF4Sk1vdWhRdHN2c3lJV2RsVS0yc1I1MXhqVHNCR1Uyanpqb0xSSFBINjNhQjYzVGJ1X2MyOHpkVEQ3VGVGNnE3VEpSbDFubHJMR2UwWDItU0F4dk1hX0ZuZHZWdS1XSEd2WTZlYXFxOFpjckktUDlEM2x1S0p2c21HV2JaMllZT1BnM0pyQS03VnIzWVlDSmE1MG4wMHJJNEIySTJYTTBFc3pHN3F6cThGR3ZBNFprZVF6UDllOG96MGcxSGhYTUJYZFBLdE0yM2M5N1hMbTU5YVJicmpBbW40VDItUlJsWEV1ek1oSmRVN083Tk16N2RvRXFVUFAwajRyOXE5dlVFeVJkZDV2YmMtekVKY3hyMXk2QW1la3lwV3hKRk1sazlBdTJWeGE5ZmxRRFhLWU1rYUpEc3BUdjFWLUVLTUJHenZ5MjhUcWxlZ3lKNFlUanJUdnk1cFlZcGFObWpyanRSOTViNk1Xcmh6c0tSb3Racl9YMjVXSDJ4VGczYWpDOTlHbXQ3YThzUEE3TlE0aVAwUHhOUTdDR3JpcGhEaXNGSzNmQVp1dkt6N3dJUzRhcHlrcHF6Z3o3WUptMkRmZHctVTFGaFRrdW1VU2t2RjMwanp1WDQyOElsY081ak1XN0JtakNHQ1o3X1ZQV0lSSjlqZEUyYlpCMGpFUTZwZ1NxUm92d3FSaHFfMU40YWRFQmZQalNUeC1mVzM2UjhLcTA2Z0NhNUdXT1U2c3ZmbDJvVDRfMzhuU21lOUFPdXFWczVhVllISzVxclhncjJPalctVjRSV1dZQklBUVJYRUZwbXVPc1FoTnlvc3N5ZTd2X18wRHI2dHlqaUpSUjFfeWM4ZThweXpRRnN0SEZUTGZOVDlZMFhScTNRVWFwN2hCRmJJcHB4WFVvNDltSHpXOEV6NTkwYjhfWXNsUVV1VDFWc1RnRTJ0MXZtTDF2aXowR1I3aThfTnVHUVd5WUhoczVmVS14MjI5Y2FTMWtfZjAwUHpsTGdvVEt0MzRwZUJoM0FqcnBCSEFYTTd5M2NhRW1vTmZLSmdURFhpdlk4NnRramttalVUTnljY0NjTm9WVFl3LVluMF94X1d1WXZvaHU4b1NXa2FFalQxZVFUVWNocExFZ0Rqa0dNTHliTldNTm1uaHhIR3dIMWlnMHRfSHJQQ0xucnp3YnJia1o3ZjUzczJ4d3R2OUgwY2puYWwtb2FTRmUyTmo4dzlDczRuclZyS3NlTTBiaUxTWDBrZlozRHR2UU9QMEFlZFNvX0FUMThwTlRYZjd5TnBVUko0WDdxMTd0RGVmN0RiRDdmV3gyOTlJWk1vcjRFRmdTaWFUTkktZExoNHNtQ2kwVS1EV09qMGl4WUtrVHFmdU1nei1jei04emRlemdmNFhoT0lXTFIweHBhY2R5NDlVNjRQN2tWcFluT2YxVEpfbE9SaTl1SjltcVJpaVNVT1RtdV9LN1Fma3F3YXpJZTZMNzBkcFhNNFdXc21Jc2dGal9xeHFJb3ZrQzhrek1jWE9TaV9oMVdoekNnTGkxZlhrY2tYOVgzY3ZhbTZtNkdpSUVJRUV3TExlN1lHRjBUYlRhVkFJSE12Z2pqRmV4cFlaM0o4SHdicDhFbkhERHpIODhLeTVXVEdIa3dtUVRVV3lmcm1hSDRJYXpKQkZ4WDQ0VkhDRHhoUTUyWE9UcmF3X2xGMDhva01zblhZMkFoaTlxMlFxQ2JRbDlQeC01eEstc1dkalY5Vzl2SEZrSEU2bVU5Z3FEQnBOLVBRejQ3UkpMNmMzZUM0d3ZoY05GZVRVWjR6VE1tN2dQd1NlMDlvVmJfYlhhU3NpN0lrTy0xMXNDd2R0QUtPR3lqaWd4VHgtbTJNdk1qNnZFZ0pTZWQ3cWxmeldrSVZ4TFhNZWZiVDdoYW0wNEQ3LVdDWUExeHlJMkYwQ3NOREtMbkU2c0hYeDhiaUtXZkhOT2VVV2hqN0lmNFVnSkJoVVRVS1hDUmtCMEF0aS1SZmVoYkpsdHNMNERaM2FOTGpRN3FvM19QaVFBMTl6Vm15SUpEaXBmVDN2M21qb1dXdzh2aFloRXlpR0o4ZXNybWlGTTRLNW45ZXJmTFpCYXltSElsN2VNWEFxbkpnbldiR2JJUmhDSjlNUzlxTGRNZ1UzX0l0eTJxUXZfb3pSdVd4UmNlbWx3QWNsTlE3bV9rRm5MUWZTb2tjWFFpd3k1OHBYdnc1RFZrTEVCUEhlb1JGNXI5TmkzOFdSQTRUa2RvS05XZk5IY2NRWkt3SGRzNUF6NEpLZWRpZmZtUHliZDdDOFJTeFVpWm9JOGJsODJxaEtjX1lOTU04elAwQmdvZGZlRWlLSGd4SlYxUHJLN0ZUQ0R5eWlUWHBJdk1aUmUzd2lDX3JsZkF4MnpaQ25IOE1vQ28yS3FCZFNyS1VvNnIzdTVONHpxQm5EMnI3Um05NDFuMXpZSk9qc2NOX0taRkF3cGdCQ2t0Mjg0aEw1SVV2UWVCdU00aXRJY3EwOE5vN1p4dnFWbGUxbGwwbkdXdElQSE1ud3Z6WG5Hb1VNLTBFajV1Z250eDJ3c1piajlidzd3TFA3RlhBeHRsN1JqTlJzeUtzZVdGb0VHUlV2OXl5cHhkWW55cHBaRFk4RThaRlE0My1hVkVCNzluVkpJZ256RzFqakNOY21TZUdVZV9IZ1hhOVFFNVM3cTBVVWVFY0x5ZkZtOW5KanRval8zRXN6TU4wWkxnZjdVakRubnIzS1ZhOWFkTEZrSDFCLUo1VmtXM0FoZnNyekVRSHI5Q1k0Q0hWbnM4dXBuWFhYRE1TUzRQaFZmY3pIUzZnaVdzM015Yl9jb0FGTnBvbTJzYVQwYzdUSW9pNi1oR3VQeTBHUXNBYUV5RDBHU2xCS3JHUWtiekV3UzJsY3ZfSDZTUTR2OV9DVERTV01RN09VbGx6XzhjRm1Yb0hGNFJiemZja3piOHU5dlNjQ3A2Q3paYmJ3Y2JqbkpNWmZKTXg1YU5IOUhMV3BmSV83ZnJXWWxlZG82clowd3NmOU9ZN1BuQklybTgtOEJCTUlTZFJhX2xUUUtYY3JfTlVfcjIzc0ZFSTMtUXE0VTMwM2MtYkJxWEhkemd5ZDN2aFd2dG9wZklSVUtEZGVBMWp5SHk4MTZnTFFaaDh3QlpqU19ST0dQYmN5WEk4cUxOSXJWN1RvaGc2aFFWdzZvTUFjMG1nYmhGTjJGRW5mbnZIczVOdEM0QUxmRjFQX3VuMVdsQlVTSFI3YldYbHlNRTdJVzk3SU9wLTlGLXNaSEZjd0sybi10NkEyQVB6aWVsZXRkVzFWUGsyNmlQRl9RQ0pxVjJYTHU0ODE5Rm9md2RYdUxsTDFOSExUVnRiYzVwSG1weGNYaXdYWlJYVjVJcExEaUJIS253N3pzbS13ZTl5ZFhTS0JtVVhMUnZGQkUxX0VvajlrcElpQjFFLUNSZ2kzeXprcnhQRG54Q3EtTFJSanRnOEY0ck9JZmNEa3lCTTB1amZrc25yOWw0LVZRdnd4MEdKM09iNnR5cFFyRWlhTlBDb2xPTVVhSGpkTjBHa0FHQXRfckhXWU5TXzQ2QlVyZUJtdTFodnpYT28yYXhfbnhxVkxCbDkzTWw5YXJDdzM5eFF6R29RNGJHaUFuaTJfdEZuZFI4U3hUX2NQbHNtM19ESW10WXBRMzQxNEhSV2NINlRjTE5FOUNpaU84UU5CSTlta2hmS3FHQlgxQkotaE9BZ1JIXzV6UVFaSk5wZHc2dGdTNHZtamdPLWR2OWF1bmZiWklCTmxYTXZZV3RKOWFlNUdVYWt4MmFiN3JfbzVKYzVBelpjQmxlU2xuazV3UWdfX3lQMFQzWDN6dXA1R0RJTUo0czJQWG90b3ZTZVBuaWxRa3d6M1FreEp5ODlYbG1GOVRkdDgwY0FYWUd6RlVrN0ZxcWllVTJpTzhHUFFhNUpOSUUyRjFfb0prcDllZTRMV1BuY0g2bWFTcDRaRWpfSERROWpySjB1YTJicjBzNV8xRG4wZTc4X3BiQmh0eXljV19ST0ZXMVpwcWk2cG9iYi1jNHZwUnZlNlI0Z1cxcExQeVljSm9QRmN1NWl2UlU3aGJaRjdEQldJMHFJcFdmOVNPc05LTmZvMVM3U0pKZ2lfSzVaUkpoZll3WDVYc3pHLU5vUk9LMFlqT0ZfRTJ0SUZING1WZkNNNW04TUxnUFYzbUZSWkhOZ3htVGVPaW4zYU5JeEp4al9nZzN3TlpCV05PbVh0NTRpQ3JrcWwxMUdvTVNGZ0VDRGp6TVU0d2RLNFg1S21SSGVZNGhuRk53QU02M3dhUG5ZeGo3UVFYYlJIN21NQlB0N2FLT2hOSld1RzJOLWFNOEZjdVQ3TmVwYkRUT1ZXelFzSUZ1WFpvTnFBeF85X3JsZXdHbDdIUFZ6V0N1QXBiLWFlem4wbERqd3BUeGdkZHEzTWxKXzFkY1NzUndrVTBCUll4RXgzaGg1Rm9Idlo0WndhcjU3QjBCUHo1WmF1dmZHdF9SVU93LVFIUXQzUU5HWm9xdGkyS1VPQUdWNG45WTNMY1JFSFRFYU1PLUdCdWJSTmJrZDdlWGhBb2U4eVZjNW03dHN3R1A2RlUwaEhWWFVSQlFnSXd5aGduNWhhOTdQVTZuTnF2UkNNcEFFbTdLVEgxZFoxSnJKU1hqNWxwSEdPdFd6RTNWTENYUDI1cmh2dFVNRDFESjhHMm1hNjJyNjJvNXNXYnNsUUR2R0JDUm1IRVZFNlcwX01xWGxBZ2FTeFYzcmkxN0J0VTdoazhCcjR3YzB1NmtQZ09XTjd3MEpjSndFRDVNSHlBRG95by1CVlk5Uzg4c0VTajZUeUYwbTVZUzVtMHZPbWljQ2FGQ2RuaWFxNzRZdlQ5NjRJcC1CNHlXZElmZU9UQ1Z4WHRYMjVBRHIzMlN6aThYcXdBUmJvQk1SQW5CMl95M1hvam8tY3ZaQ2JjMjhHS1VKZHVvRzl3Mjk5SXdrNDZLTDdWcFVtLXFaTFozYXpQa0NhYVB4V2JwSHJiZm5XUzJyZHpyOFItTXZqcmFCZmZTYkc5ck9vdnA2aG83cEpWSHhaZUZnVFkzZm1SN29uQzVqTUQzV25sSlh3dG5YMno0T3dudTdJbUJ6VXU1N0QwNGdNZnJkd3VEQWkyeUkwRjhHUmFDbElmVndsbVIyYk8wN3F6WF9Gem9oYXI0UkV6dXM5LWJwOEJmN0dyYWxtd3FYcEFpUk1IWDdNNDVsN2k3ejY1VDNQRTVpbmFKd1NtT1kzci0zM1RSUUs1Uy00N0FHQnFDaktMTFR0aEExeXF2cV8tSDJFT2pNaGRXdGNleW1Ndm01VkRWVzZvZ0F6M2w5TEo0VEhNMGR6NEdCaHhOSzlqSnhxQ1BEckhZejZHS0FWZzUtOWdkaTdZcVJTVENtZzRyODZEMW5yUEtHNkhuOVMxNzZrYWRZUHk5cU1TU09qejBCMzdEcmRkdFZDVGgwUlZuLVhCRVE4ZHpYcVFndE1vLUJYb3drRHdhOU5oejFkYXJIWTloZ2JVc3FCNUJFWjFoNGhUMDZhSDl3QnlWZXd2aVhLOVhoS1VMLWsxb0I3NlpvbjVfNmQ1d2VHWkdiS2lrR2dKTEJNaWN1NXJIMmFmd0VOYzl1WFRxcnRzVUJXTjkwTEtJeUJtNVY0cXBRNTdDUk1FeFhKcXoyTVhGOEQwcnV3TlJ4ZjFTbUt1d1NZb1BuQWFjczhKN0Nkb21iV21zRjFvUUNpTjAyY0ttR29LOFZqQm9mN3dfOEl4aVozc210SzlhME13akJZdnJvSmVLNnVOLVl6Yk03aHF2di1tN3dFY2ozY3ppT1dRQUlKdFNSbmFqZ2ZfelNBUGg0OEw4dzBybmV4dElEWjNYNTllMXVaNEIxSmVsUl9hcndfU2Fad1dFWElXMkJqZVZXdl9QZ2h6TC1aT3dzcExtanNJdklsOTRDMXZwY3Y2VU5nVzZKelZaQVRRdXJkRVBuSS11T194bENHUmplcDBjWU01allmaXNwSHgyZm5KeEU5bFlOUlNwZ2N3bE9CSmUyb3J3WDZGVTg1eHRIUTh2dG5KMnMwZ2tCeGtmMUZVd0l4ZVN2QUlIX3dBbDB5NzFlZ3htSVpvPQ==)
            CM_CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmZuaTA1Um9NRDNqeHhQZXFVMG5jb0hmakotQTZlVS1KSzdMbDgwdEZRQ0d1MmRfNF9LX1ZhRHJYWUUzWV9pM2hpSklJcUZ6eUxhN3Q0TEtaS052UXU2ZFNkcnc9PQ==)
            CM_PROVISIONING_PROFILE: Encrypted()
        node: latest
        xcode: latest
        cocoapods: default        
    scripts:
        - name: Install npm dependencies
          script: |
            npm install
        - name: Install detox dependencies
          script: |
            brew tap wix/brew
            brew install applesimutils
        - name: Install detox-cli
          script: |
            npm install -g detox-cli
        - name: Install CocoaPods dependencies
          script: |
            cd ios && pod install
        - name: Set up keychain
          script: |
            keychain initialize
        - name: Set up provisioning profiles
          script: |
            PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
            mkdir -p "$PROFILES_HOME"
            PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
            echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
            echo "Saved provisioning profile $PROFILE_PATH"
        - name: Set up signing certificate
          script: |
            echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
            keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
        - name: Set up code signing settings on Xcode project
          script: |
            xcode-project use-profiles
        - name: Build with Detox
          script: |
            detox build -c ios.sim.release
        - name: Test with Detox
          script: |
            detox test -c ios.sim.release
        - name: Build ipa for distribution
          script: |
            xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
        - build/ios/ipa/*.ipa
        - /tmp/xcodebuild_logs/*.log
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM 
    publishing:
        email:
            recipients:
                - sbis1999@gmail.com
